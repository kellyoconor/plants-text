# ============================================
# PLANT TEXTS - ENVIRONMENT CONFIGURATION
# ============================================
# Copy this file to .env and fill in your values
# NEVER commit .env to git!

# ----- REQUIRED: Security (MUST be set) -----

# SECRET_KEY - Used for session encryption and security
# MUST be at least 32 characters long
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(48))"
SECRET_KEY=your-super-secret-key-minimum-32-characters-long-CHANGE-THIS

# ADMIN_API_KEY - Required for admin endpoint access
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
# Use this in X-Admin-API-Key header for admin endpoints
ADMIN_API_KEY=your-admin-api-key-keep-this-secret-CHANGE-THIS

# ----- REQUIRED: Database -----

# DATABASE_URL - PostgreSQL connection string
# Format: postgresql://user:password@host:port/database
# Development: Use SQLite - sqlite:///./plants_texts.db
# Production: Use PostgreSQL from Railway/Render
DATABASE_URL=postgresql://username:password@localhost:5432/planttexts

# ----- REQUIRED: Redis (for Celery task queue) -----

# REDIS_URL - Redis connection string
# Format: redis://host:port/db
REDIS_URL=redis://localhost:6379/0

# ----- REQUIRED: CORS (Frontend URLs) -----

# CORS_ORIGINS - Comma-separated list of allowed origins
# Include all your frontend URLs (development and production)
# NO SPACES between commas and URLs
CORS_ORIGINS=http://localhost:3000,http://localhost:5173,https://your-frontend.railway.app

# ----- Application Settings -----

# ENVIRONMENT - Set to production on Railway/Render
ENVIRONMENT=development

# DEBUG - Set to false in production
DEBUG=true

# ALLOWED_HOSTS - Comma-separated list of allowed hostnames
# Use * for development only
# In production, list specific domains
ALLOWED_HOSTS=*

# ----- REQUIRED: OpenAI (for AI personalities) -----

# OPENAI_API_KEY - Required for AI personality chat
# Get from: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your-openai-api-key-here

# ----- OPTIONAL: Twilio SMS -----

# Twilio Configuration - Leave empty to use demo mode
# In demo mode, SMS messages are logged to database instead of sent
# Get credentials from: https://console.twilio.com
TWILIO_ACCOUNT_SID=
TWILIO_AUTH_TOKEN=
TWILIO_PHONE_NUMBER=

# ----- OPTIONAL: Database Connection Pool -----

# DB_POOL_SIZE - Number of connections in pool (default: 20)
DB_POOL_SIZE=20

# DB_MAX_OVERFLOW - Max additional connections (default: 40)
DB_MAX_OVERFLOW=40

# DB_POOL_RECYCLE - Recycle connections after N seconds (default: 3600)
DB_POOL_RECYCLE=3600

# ----- OPTIONAL: Monitoring -----

# SENTRY_DSN - Error tracking with Sentry
# Get from: https://sentry.io
SENTRY_DSN=

# BRAINTRUST_API_KEY - Prompt management (optional)
# Get from: https://braintrust.dev
BRAINTRUST_API_KEY=

# ============================================
# QUICK START FOR DEVELOPMENT
# ============================================
# 1. Copy this file: cp env.example backend/.env
# 2. Generate SECRET_KEY: python -c "import secrets; print(secrets.token_urlsafe(48))"
# 3. Generate ADMIN_API_KEY: python -c "import secrets; print(secrets.token_urlsafe(32))"
# 4. Add your OpenAI API key
# 5. Leave other values as defaults for local development
# 6. Start backend: cd backend && uvicorn app.main:app --reload

# ============================================
# PRODUCTION DEPLOYMENT CHECKLIST
# ============================================
# ✅ SECRET_KEY - Generated, 32+ chars
# ✅ ADMIN_API_KEY - Generated, secure
# ✅ DATABASE_URL - PostgreSQL URL from Railway/Render
# ✅ REDIS_URL - Redis URL from Railway/Render
# ✅ CORS_ORIGINS - Your frontend URL(s)
# ✅ ENVIRONMENT=production
# ✅ DEBUG=false
# ✅ ALLOWED_HOSTS - Your domain(s), not *
# ✅ OPENAI_API_KEY - Valid API key
# ✅ TWILIO credentials (if using real SMS)
